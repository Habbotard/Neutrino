package core.network;

import java.io.DataInputStream;
import java.util.concurrent.atomic.AtomicLong;
import java.util.logging.Logger;

import org.jboss.netty.buffer.ChannelBuffer;
import org.jboss.netty.channel.Channel;
import org.jboss.netty.channel.ChannelHandlerContext;
import org.jboss.netty.channel.ChannelStateEvent;
import org.jboss.netty.channel.SimpleChannelUpstreamHandler;

import core.game.users.Session;

public class SocketHandler extends SimpleChannelUpstreamHandler {
	private static final Logger logger = Logger.getLogger(
            SocketHandler.class.getName());

    public DataInputStream inreader;
    public ChannelBuffer in;
    private final AtomicLong transferredBytes = new AtomicLong();
    public Channel Socket;

    public long getTransferredBytes() {
        return transferredBytes.get();
    }
    
    // And now, all code to make sockets work!
    public Session GetSession()
    {
    	Session.SessionsByChannels.get(Socket);
    }
    
    @Override
    public void channelConnected(ChannelHandlerContext ctx, ChannelStateEvent e)
    {
    	// When ChannelConnected, we set the socket and create a new session of it
        this.Socket = e.getChannel();
    }
}
