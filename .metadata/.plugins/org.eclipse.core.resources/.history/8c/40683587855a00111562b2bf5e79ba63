package com.sulake.habbo.communication.messages.outgoing.userinformation;

import java.util.ArrayList;
import java.util.Iterator;

import neutrino.ItemManager.ItemInformation;
import neutrino.ItemManager.UserItem;
import neutrino.Network.ServerHandler;
import neutrino.PacketsInformation.ServerEvents;
import neutrino.System.ServerMessage;
import neutrino.UserManager.Friend;
import neutrino.UserManager.Habbo;

public class ConfirmTradeMessageComposer {
	public static void Compose(ServerHandler Client, Habbo CurrentUser) throws Exception
	{
		Habbo User = CurrentUser;    
		int oId = User.TradingWith;
		Habbo oUser = Habbo.UsersbyId.get(User.TradingWith);
		User.TradeConfirmed = true;
        
        if(oUser.TradeConfirmed)
        {  
    		User.TradingWith = User.LookingTo;
    		User.TradingItems = new ArrayList<Integer>();
    		User.TradeAccepted = false;
            User.TradeConfirmed = false;
    		oUser.TradingWith = User.Id;
    		oUser.TradingItems = new ArrayList<Integer>();
    		oUser.TradeAccepted = false;
            oUser.TradeConfirmed = false;
        	ServerMessage Confirm = new ServerMessage(ServerEvents.EndTrade);
            Confirm.Send(Client.Socket);
            Confirm.Send(oUser.CurrentSocket);
        }

	}
}
